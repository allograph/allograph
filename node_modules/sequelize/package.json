{
  "_args": [
    [
      {
        "raw": "sequelize@^3.19.1",
        "scope": null,
        "escapedName": "sequelize",
        "name": "sequelize",
        "rawSpec": "^3.19.1",
        "spec": ">=3.19.1 <4.0.0",
        "type": "range"
      },
      "/Users/rachelminto/Documents/launch_school/capstone/allograph"
    ]
  ],
  "_from": "sequelize@>=3.19.1 <4.0.0",
  "_id": "sequelize@3.30.2",
  "_inCache": true,
  "_location": "/sequelize",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/sequelize-3.30.2.tgz_1486550257035_0.3754311699885875"
  },
  "_npmUser": {
    "name": "janaameier",
    "email": "janzeh@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sequelize@^3.19.1",
    "scope": null,
    "escapedName": "sequelize",
    "name": "sequelize",
    "rawSpec": "^3.19.1",
    "spec": ">=3.19.1 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/sequelize/-/sequelize-3.30.2.tgz",
  "_shasum": "8fb5a5769a01777451593924092f9d3061eb935f",
  "_shrinkwrap": null,
  "_spec": "sequelize@^3.19.1",
  "_where": "/Users/rachelminto/Documents/launch_school/capstone/allograph",
  "author": {
    "name": "Sascha Depold",
    "email": "sascha@depold.com"
  },
  "bugs": {
    "url": "https://github.com/sequelize/sequelize/issues"
  },
  "contributors": [
    {
      "name": "Sascha Depold",
      "email": "sascha@depold.com"
    },
    {
      "name": "Jan Aagaard Meier",
      "email": "janzeh@gmail.com,jmei@itu.dk"
    },
    {
      "name": "Daniel Durante",
      "email": "me@danieldurante.com"
    },
    {
      "name": "Mick Hansen",
      "email": "mick.kasper.hansen@gmail.com"
    }
  ],
  "dependencies": {
    "bluebird": "^3.3.4",
    "depd": "^1.1.0",
    "dottie": "^1.0.0",
    "generic-pool": "2.4.2",
    "inflection": "^1.6.0",
    "lodash": "4.12.0",
    "moment": "^2.13.0",
    "moment-timezone": "^0.5.4",
    "retry-as-promised": "^2.0.0",
    "semver": "^5.0.1",
    "shimmer": "1.1.0",
    "terraformer-wkt-parser": "^1.1.0",
    "toposort-class": "^1.0.1",
    "uuid": "^3.0.0",
    "validator": "^5.2.0",
    "wkx": "0.2.0"
  },
  "description": "Multi dialect ORM for Node.JS/io.js",
  "devDependencies": {
    "chai": "^3.5.0",
    "chai-as-promised": "^5.1.0",
    "chai-datetime": "^1.4.0",
    "chai-spies": "^0.7.0",
    "commander": "^2.6.0",
    "continuation-local-storage": "^3.1.4",
    "cross-env": "^2.0.1",
    "dox": "~0.8.0",
    "git": "^0.1.5",
    "hints": "^0.2.0",
    "istanbul": "^0.4.3",
    "jshint": "^2.9.2",
    "lcov-result-merger": "^1.2.0",
    "mocha": "^2.4.2",
    "mysql": "~2.10.1",
    "pg": "^4.4.6",
    "pg-hstore": "^2.3.1",
    "pg-native": "^1.8.0",
    "pg-types": "^1.11.0",
    "rimraf": "^2.5.4",
    "sinon": "^1.17.4",
    "sinon-chai": "^2.8.0",
    "sqlite3": "^3.1.4",
    "tedious": "^1.13.2",
    "uuid-validate": "^0.0.2",
    "watchr": "~2.4.11"
  },
  "directories": {},
  "dist": {
    "shasum": "8fb5a5769a01777451593924092f9d3061eb935f",
    "tarball": "https://registry.npmjs.org/sequelize/-/sequelize-3.30.2.tgz"
  },
  "engines": {
    "node": ">=0.6.21"
  },
  "gitHead": "99d406ea8cbed5e6d8bb0b28a6fb011a44b9f16a",
  "homepage": "https://github.com/sequelize/sequelize#readme",
  "keywords": [
    "mysql",
    "sqlite",
    "postgresql",
    "postgres",
    "mssql",
    "orm",
    "nodejs",
    "object relational mapper"
  ],
  "license": "MIT",
  "main": "index",
  "maintainers": [
    {
      "name": "sdepold",
      "email": "sascha@depold.com"
    },
    {
      "name": "durango",
      "email": "me@danieldurante.com"
    },
    {
      "name": "mickhansen",
      "email": "mick.kasper.hansen@gmail.com"
    },
    {
      "name": "janaameier",
      "email": "janzeh@gmail.com"
    }
  ],
  "name": "sequelize",
  "optionalDependencies": {},
  "readme": "ERROR: No README data found!",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sequelize/sequelize.git"
  },
  "scripts": {
    "build-docker": "docker-compose build",
    "cover": "rimraf coverage && npm run teaser && npm run cover-unit && npm run cover-integration && npm run merge-coverage",
    "cover-integration": "cross-env COVERAGE=true node_modules/.bin/istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -t 60000 --ui tdd \"test/integration/**/*.test.js\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/integration.info')\"",
    "cover-unit": "cross-env COVERAGE=true node_modules/.bin/istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -t 30000 --ui tdd \"test/unit/**/*.test.js\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/unit.info')\"",
    "docs": "node docs/docs-generator.js",
    "jshint": "jshint lib test",
    "merge-coverage": "lcov-result-merger \"coverage/*.info\" \"coverage/lcov.info\"",
    "sscce": "docker-compose run sequelize /bin/sh -c \"node sscce.js\"",
    "sscce-mysql": "cross-env DIALECT=mysql npm run sscce",
    "sscce-postgres": "cross-env DIALECT=postgres npm run sscce",
    "sscce-sqlite": "cross-env DIALECT=sqlite npm run sscce",
    "teaser": "echo ''; node -pe \"Array(20 + process.env.DIALECT.length + 3).join('#')\"; echo '# Running tests for '$DIALECT' #'; node -pe \"Array(20 + process.env.DIALECT.length + 3).join('#')\";echo '';",
    "test": "npm run jshint && npm run teaser && npm run test-unit && npm run test-integration",
    "test-all": "npm run test-mysql && npm run test-sqlite && npm run test-postgres && npm run test-postgres-native && npm run test-mariadb && npm run test-mssql",
    "test-docker": "docker-compose run sequelize /bin/sh -c \"npm run test-all\"",
    "test-docker-integration": "docker-compose run sequelize /bin/sh -c \"npm run test-integration-all\"",
    "test-docker-unit": "docker-compose run sequelize /bin/sh -c \"npm run test-unit-all\"",
    "test-integration": "mocha --globals setImmediate,clearImmediate --ui tdd --check-leaks --colors -t 30000 --reporter spec \"test/integration/**/*.test.js\"",
    "test-integration-all": "npm run test-integration-mysql && npm run test-integration-postgres && npm run test-integration-postgres-native && npm run test-integration-mssql && npm run test-integration-sqlite && npm run test-integration-mariadb",
    "test-integration-mariadb": "cross-env DIALECT=mariadb npm run test-integration",
    "test-integration-mssql": "cross-env DIALECT=mssql npm run test-integration",
    "test-integration-mysql": "cross-env DIALECT=mysql npm run test-integration",
    "test-integration-postgres": "cross-env DIALECT=postgres npm run test-integration",
    "test-integration-postgres-native": "cross-env DIALECT=postgres-native npm run test-integration",
    "test-integration-sqlite": "cross-env DIALECT=sqlite npm run test-integration",
    "test-mariadb": "cross-env DIALECT=mariadb npm test",
    "test-mssql": "cross-env DIALECT=mssql npm test",
    "test-mysql": "cross-env DIALECT=mysql npm test",
    "test-pgsql": "npm run test-postgres",
    "test-postgres": "cross-env DIALECT=postgres npm test",
    "test-postgres-native": "cross-env DIALECT=postgres-native npm test",
    "test-postgresn": "npm run test-postgres-native",
    "test-sqlite": "cross-env DIALECT=sqlite npm test",
    "test-unit": "mocha --globals setImmediate,clearImmediate --ui tdd --check-leaks --colors -t 30000 --reporter spec \"test/unit/**/*.js\"",
    "test-unit-all": "npm run test-unit-mysql && npm run test-unit-postgres && npm run test-unit-postgres-native && npm run test-unit-mssql && npm run test-unit-sqlite && npm run test-unit-mariadb",
    "test-unit-mariadb": "cross-env DIALECT=mariadb npm run test-unit",
    "test-unit-mssql": "cross-env DIALECT=mssql npm run test-unit",
    "test-unit-mysql": "cross-env DIALECT=mysql npm run test-unit",
    "test-unit-postgres": "cross-env DIALECT=postgres npm run test-unit",
    "test-unit-postgres-native": "cross-env DIALECT=postgres-native npm run test-unit",
    "test-unit-sqlite": "cross-env DIALECT=sqlite npm run test-unit"
  },
  "version": "3.30.2"
}

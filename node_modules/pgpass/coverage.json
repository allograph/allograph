{
  "instrumentation": "node-jscoverage",
  "sloc": 0,
  "hits": 0,
  "misses": 0,
  "coverage": 0,
  "files": [],
  "stats": {
    "suites": 11,
    "tests": 31,
    "passes": 31,
    "pending": 0,
    "failures": 0,
    "start": "2014-04-12T21:56:43.894Z",
    "end": "2014-04-12T21:56:44.185Z",
    "duration": 291
  },
  "tests": [
    {
      "title": "should not de-escape NODE_PG_NO_DESCAPE is set",
      "fullTitle": "#1 should not de-escape NODE_PG_NO_DESCAPE is set",
      "duration": 8
    },
    {
      "title": "should handle escaping right",
      "fullTitle": "#1 should handle escaping right",
      "duration": 1
    },
    {
      "title": "should be process.stderr by default",
      "fullTitle": "#warnTo() should be process.stderr by default",
      "duration": 0
    },
    {
      "title": "should not cause problems to give a non-stream",
      "fullTitle": "#warnTo() should not cause problems to give a non-stream",
      "duration": 0
    },
    {
      "title": "should write warnings to our writable stream",
      "fullTitle": "#warnTo() should write warnings to our writable stream",
      "duration": 1
    },
    {
      "title": "should return the default pgpass file",
      "fullTitle": "#getFileName() should return the default pgpass file",
      "duration": 0
    },
    {
      "title": "should return the the path to PGPASSFILE if set",
      "fullTitle": "#getFileName() should return the the path to PGPASSFILE if set",
      "duration": 0
    },
    {
      "title": "should represent the platform and can be changed",
      "fullTitle": "#isWin should represent the platform and can be changed",
      "duration": 1
    },
    {
      "title": "should consider permission 0100660 not secure",
      "fullTitle": "#usePgPass() should consider permission 0100660 not secure",
      "duration": 1
    },
    {
      "title": "should consider permission 0100606 not secure",
      "fullTitle": "#usePgPass() should consider permission 0100606 not secure",
      "duration": 0
    },
    {
      "title": "should consider permission 0100100 secure",
      "fullTitle": "#usePgPass() should consider permission 0100100 secure",
      "duration": 0
    },
    {
      "title": "should consider permission 0100600 secure",
      "fullTitle": "#usePgPass() should consider permission 0100600 secure",
      "duration": 0
    },
    {
      "title": "should consider permission 0040600 not secure",
      "fullTitle": "#usePgPass() should consider permission 0040600 not secure",
      "duration": 0
    },
    {
      "title": "should consider permission 0060600 not secure",
      "fullTitle": "#usePgPass() should consider permission 0060600 not secure",
      "duration": 0
    },
    {
      "title": "should always return false if PGPASSWORD is set",
      "fullTitle": "#usePgPass() should always return false if PGPASSWORD is set",
      "duration": 0
    },
    {
      "title": "should always return true on windows",
      "fullTitle": "#usePgPass() should always return true on windows",
      "duration": 0
    },
    {
      "title": "should parse a simple line",
      "fullTitle": "#parseLine() should parse a simple line",
      "duration": 1
    },
    {
      "title": "should handle comments",
      "fullTitle": "#parseLine() should handle comments",
      "duration": 0
    },
    {
      "title": "should handle escaped ':' and '\\' right",
      "fullTitle": "#parseLine() should handle escaped ':' and '\\' right",
      "duration": 0
    },
    {
      "title": "should ignore too short lines",
      "fullTitle": "#parseLine() should ignore too short lines",
      "duration": 0
    },
    {
      "title": "shouldn't report valid entries",
      "fullTitle": "#isValidEntry() shouldn't report valid entries",
      "duration": 1
    },
    {
      "title": "should find invalid entries",
      "fullTitle": "#isValidEntry() should find invalid entries",
      "duration": 0
    },
    {
      "title": "should not get password for non-matching conn_info",
      "fullTitle": "#getPassword() should not get password for non-matching conn_info",
      "duration": 1
    },
    {
      "title": "should get password for matching conn_info",
      "fullTitle": "#getPassword() should get password for matching conn_info",
      "duration": 0
    },
    {
      "title": "should ignore no password on any error",
      "fullTitle": "#getPassword() should ignore no password on any error",
      "duration": 1
    },
    {
      "title": "should ignore non existent file",
      "fullTitle": "MAIN should ignore non existent file",
      "duration": 1
    },
    {
      "title": "should read .pgpass",
      "fullTitle": "MAIN should read .pgpass",
      "duration": 0
    },
    {
      "title": "should not read .pgpass because of PGPASSWORD",
      "fullTitle": "MAIN should not read .pgpass because of PGPASSWORD",
      "duration": 0
    },
    {
      "title": "the JS client can connect",
      "fullTitle": "using same password file the JS client can connect",
      "duration": 18
    },
    {
      "title": "the native client can connect",
      "fullTitle": "using same password file the native client can connect",
      "duration": 1
    },
    {
      "title": "the psql client can connect",
      "fullTitle": "using same password file the psql client can connect",
      "duration": 84
    }
  ],
  "failures": [],
  "passes": [
    {
      "title": "should not de-escape NODE_PG_NO_DESCAPE is set",
      "fullTitle": "#1 should not de-escape NODE_PG_NO_DESCAPE is set",
      "duration": 8
    },
    {
      "title": "should handle escaping right",
      "fullTitle": "#1 should handle escaping right",
      "duration": 1
    },
    {
      "title": "should be process.stderr by default",
      "fullTitle": "#warnTo() should be process.stderr by default",
      "duration": 0
    },
    {
      "title": "should not cause problems to give a non-stream",
      "fullTitle": "#warnTo() should not cause problems to give a non-stream",
      "duration": 0
    },
    {
      "title": "should write warnings to our writable stream",
      "fullTitle": "#warnTo() should write warnings to our writable stream",
      "duration": 1
    },
    {
      "title": "should return the default pgpass file",
      "fullTitle": "#getFileName() should return the default pgpass file",
      "duration": 0
    },
    {
      "title": "should return the the path to PGPASSFILE if set",
      "fullTitle": "#getFileName() should return the the path to PGPASSFILE if set",
      "duration": 0
    },
    {
      "title": "should represent the platform and can be changed",
      "fullTitle": "#isWin should represent the platform and can be changed",
      "duration": 1
    },
    {
      "title": "should consider permission 0100660 not secure",
      "fullTitle": "#usePgPass() should consider permission 0100660 not secure",
      "duration": 1
    },
    {
      "title": "should consider permission 0100606 not secure",
      "fullTitle": "#usePgPass() should consider permission 0100606 not secure",
      "duration": 0
    },
    {
      "title": "should consider permission 0100100 secure",
      "fullTitle": "#usePgPass() should consider permission 0100100 secure",
      "duration": 0
    },
    {
      "title": "should consider permission 0100600 secure",
      "fullTitle": "#usePgPass() should consider permission 0100600 secure",
      "duration": 0
    },
    {
      "title": "should consider permission 0040600 not secure",
      "fullTitle": "#usePgPass() should consider permission 0040600 not secure",
      "duration": 0
    },
    {
      "title": "should consider permission 0060600 not secure",
      "fullTitle": "#usePgPass() should consider permission 0060600 not secure",
      "duration": 0
    },
    {
      "title": "should always return false if PGPASSWORD is set",
      "fullTitle": "#usePgPass() should always return false if PGPASSWORD is set",
      "duration": 0
    },
    {
      "title": "should always return true on windows",
      "fullTitle": "#usePgPass() should always return true on windows",
      "duration": 0
    },
    {
      "title": "should parse a simple line",
      "fullTitle": "#parseLine() should parse a simple line",
      "duration": 1
    },
    {
      "title": "should handle comments",
      "fullTitle": "#parseLine() should handle comments",
      "duration": 0
    },
    {
      "title": "should handle escaped ':' and '\\' right",
      "fullTitle": "#parseLine() should handle escaped ':' and '\\' right",
      "duration": 0
    },
    {
      "title": "should ignore too short lines",
      "fullTitle": "#parseLine() should ignore too short lines",
      "duration": 0
    },
    {
      "title": "shouldn't report valid entries",
      "fullTitle": "#isValidEntry() shouldn't report valid entries",
      "duration": 1
    },
    {
      "title": "should find invalid entries",
      "fullTitle": "#isValidEntry() should find invalid entries",
      "duration": 0
    },
    {
      "title": "should not get password for non-matching conn_info",
      "fullTitle": "#getPassword() should not get password for non-matching conn_info",
      "duration": 1
    },
    {
      "title": "should get password for matching conn_info",
      "fullTitle": "#getPassword() should get password for matching conn_info",
      "duration": 0
    },
    {
      "title": "should ignore no password on any error",
      "fullTitle": "#getPassword() should ignore no password on any error",
      "duration": 1
    },
    {
      "title": "should ignore non existent file",
      "fullTitle": "MAIN should ignore non existent file",
      "duration": 1
    },
    {
      "title": "should read .pgpass",
      "fullTitle": "MAIN should read .pgpass",
      "duration": 0
    },
    {
      "title": "should not read .pgpass because of PGPASSWORD",
      "fullTitle": "MAIN should not read .pgpass because of PGPASSWORD",
      "duration": 0
    },
    {
      "title": "the JS client can connect",
      "fullTitle": "using same password file the JS client can connect",
      "duration": 18
    },
    {
      "title": "the native client can connect",
      "fullTitle": "using same password file the native client can connect",
      "duration": 1
    },
    {
      "title": "the psql client can connect",
      "fullTitle": "using same password file the psql client can connect",
      "duration": 84
    }
  ]
}
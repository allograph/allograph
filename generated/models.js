// This file is generated by Allograph. We recommend that you do not modify this file.
var knex = require('../database/connection');

export class BaseUser {
  users(args) {
    return knex('users').where(args);
  }

  createUser(args) {
    return knex.returning('id').insert({
      firstName: args.firstName,
      lastName: args.lastName,
      email: args.email,
      password: args.password,
    }).into('users').then(id => {
      return knex('users').where({ id: id[0] }).first();
    });
  }

  updateUser(args) {
    return knex('users').where({ id: args.id }).returning('id').update({
      firstName: args.firstName,
      lastName: args.lastName,
      email: args.email,
      password: args.password,
    }).then(id => {
      return knex('users').where({ id: id[0] }).first();
    });
  }

  deleteUser(args) {
    return knex('users').where({ id: args.id }).del()
  }
}

export class BasePost {
  posts(args) {
    return knex('posts').where(args);
  }

  createPost(args) {
    return knex.returning('id').insert({
      title: args.title,
      content: args.content,
      userId: args.userId,
    }).into('posts').then(id => {
      return knex('posts').where({ id: id[0] }).first();
    });
  }

  updatePost(args) {
    return knex('posts').where({ id: args.id }).returning('id').update({
      title: args.title,
      content: args.content,
      userId: args.userId,
    }).then(id => {
      return knex('posts').where({ id: id[0] }).first();
    });
  }

  deletePost(args) {
    return knex('posts').where({ id: args.id }).del()
  }
}

export class BaseComment {
  comments(args) {
    return knex('comments').where(args);
  }

  createComment(args) {
    return knex.returning('id').insert({
      content: args.content,
      userId: args.userId,
      postId: args.postId,
    }).into('comments').then(id => {
      return knex('comments').where({ id: id[0] }).first();
    });
  }

  updateComment(args) {
    return knex('comments').where({ id: args.id }).returning('id').update({
      content: args.content,
      userId: args.userId,
      postId: args.postId,
    }).then(id => {
      return knex('comments').where({ id: id[0] }).first();
    });
  }

  deleteComment(args) {
    return knex('comments').where({ id: args.id }).del()
  }
}
schema {
  query: Query
  mutation: Mutation
}

# This is a table called users
type User {
  id: Int!
  first_name: String!
  last_name: String!
  email: String
  posts: [Post]
  comments: [Comment]
}

# This is a table called comments
type Comment {
  id: Int!
  content: String!
  users: User!
  posts: Post!
}

# This is a table called posts
type Post {
  id: Int!
  title: String!
  content: String!
  users: User!
  tags_posts: [Tags_post]
  comments: [Comment]
}

# This is a table called tags
type Tag {
  id: Int!
  title: String
  tags_posts: [Tags_post]
}

# This is a table called tags_posts
type Tags_post {
  id: Int!
  posts: Post!
  tags: Tag!
}


# Root query object
type Query {
  name(id: Int, firstName: String, test: String, email: String): [User]
  posts(id: Int, title: String, content: String): [Post]
  comments(id: Int, content: String): [Comment]
  users(id: Int, first_name: String, last_name: String, email: String): [User]
  tags(id: Int, title: String): [Tag]
  tags_posts(id: Int): [Tags_post]
}

# Functions to set stuff
type Mutation {
  addUser(email: String): User
  updateName(id: Int!, firstName: String!, lastName: String!, email: String): String
  updateUser(id: Int!, first_name: String!, last_name: String!, email: String): User
  deleteUser(id: Int!): String
  addComment(content: String!): Comment
  updateComment(id: Int!, content: String!): Comment
  deleteComment(id: Int!): String
  addPost(title: String!, content: String!): Post
  updatePost(id: Int!, title: String!, content: String!): Post
  deletePost(id: Int!): String
  addTag(title: String): Tag
  updateTag(id: Int!, title: String): Tag
  deleteTag(id: Int!): String
  addTags_pos): Tags_post
  updateTags_post(id: Int!): Tags_post
  deleteTags_post(id: Int!): String
}

// This file is generated by Allograph. We recommend that you do not modify this file.

class User {
  users(args) {
    return knex('users').where(args).then(users => {
      return users
    });
  }

  createUser(args) {
    return knex.returning('id').insert({
      id: args.id,
      first_name: args.first_name,
      last_name: args.last_name,
      email: args.email,
      posts: args.posts,
      comments: args.comments,
    }).into('users').then(id => {
      return knex('users').where({ id: id[0] }).then(user => {
        return user[0];
      });
    });
  }

  updateUser(args) {
    return knex('users').where({ id: args.id }).returning('id').update({
      id: args.id,
      first_name: args.first_name,
      last_name: args.last_name,
      email: args.email,
      posts: args.posts,
      comments: args.comments,
    }).then(id => {
      return knex('users').where({ id: id[0] }).then(user => {
        return user[0];
      });
    });
  }

  deleteUser(id) {
    return knex('users').where({ id: id }).del().then(numberOfDeletedItems => {
      return 'Number of deleted users: ' + numberOfDeletedItems;
    });
  }
}

class Comment {
  comments(args) {
    return knex('comments').where(args).then(comments => {
      return comments
    });
  }

  createComment(args) {
    return knex.returning('id').insert({
      id: args.id,
      content: args.content,
      users: args.users,
      posts: args.posts,
    }).into('comments').then(id => {
      return knex('comments').where({ id: id[0] }).then(comment => {
        return comment[0];
      });
    });
  }

  updateComment(args) {
    return knex('comments').where({ id: args.id }).returning('id').update({
      id: args.id,
      content: args.content,
      users: args.users,
      posts: args.posts,
    }).then(id => {
      return knex('comments').where({ id: id[0] }).then(comment => {
        return comment[0];
      });
    });
  }

  deleteComment(id) {
    return knex('comments').where({ id: id }).del().then(numberOfDeletedItems => {
      return 'Number of deleted comments: ' + numberOfDeletedItems;
    });
  }
}

class Post {
  posts(args) {
    return knex('posts').where(args).then(posts => {
      return posts
    });
  }

  createPost(args) {
    return knex.returning('id').insert({
      id: args.id,
      title: args.title,
      content: args.content,
      users: args.users,
      tags_posts: args.tags_posts,
      comments: args.comments,
    }).into('posts').then(id => {
      return knex('posts').where({ id: id[0] }).then(post => {
        return post[0];
      });
    });
  }

  updatePost(args) {
    return knex('posts').where({ id: args.id }).returning('id').update({
      id: args.id,
      title: args.title,
      content: args.content,
      users: args.users,
      tags_posts: args.tags_posts,
      comments: args.comments,
    }).then(id => {
      return knex('posts').where({ id: id[0] }).then(post => {
        return post[0];
      });
    });
  }

  deletePost(id) {
    return knex('posts').where({ id: id }).del().then(numberOfDeletedItems => {
      return 'Number of deleted posts: ' + numberOfDeletedItems;
    });
  }
}

class Tag {
  tags(args) {
    return knex('tags').where(args).then(tags => {
      return tags
    });
  }

  createTag(args) {
    return knex.returning('id').insert({
      id: args.id,
      title: args.title,
      tags_posts: args.tags_posts,
    }).into('tags').then(id => {
      return knex('tags').where({ id: id[0] }).then(tag => {
        return tag[0];
      });
    });
  }

  updateTag(args) {
    return knex('tags').where({ id: args.id }).returning('id').update({
      id: args.id,
      title: args.title,
      tags_posts: args.tags_posts,
    }).then(id => {
      return knex('tags').where({ id: id[0] }).then(tag => {
        return tag[0];
      });
    });
  }

  deleteTag(id) {
    return knex('tags').where({ id: id }).del().then(numberOfDeletedItems => {
      return 'Number of deleted tags: ' + numberOfDeletedItems;
    });
  }
}

class Tags_post {
  tags_posts(args) {
    return knex('tags_posts').where(args).then(tags_posts => {
      return tags_posts
    });
  }

  createTags_post(args) {
    return knex.returning('id').insert({
      id: args.id,
      posts: args.posts,
      tags: args.tags,
    }).into('tags_posts').then(id => {
      return knex('tags_posts').where({ id: id[0] }).then(tags_post => {
        return tags_post[0];
      });
    });
  }

  updateTags_post(args) {
    return knex('tags_posts').where({ id: args.id }).returning('id').update({
      id: args.id,
      posts: args.posts,
      tags: args.tags,
    }).then(id => {
      return knex('tags_posts').where({ id: id[0] }).then(tags_post => {
        return tags_post[0];
      });
    });
  }

  deleteTags_post(id) {
    return knex('tags_posts').where({ id: id }).del().then(numberOfDeletedItems => {
      return 'Number of deleted tags_posts: ' + numberOfDeletedItems;
    });
  }
}